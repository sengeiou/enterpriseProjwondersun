<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:util="http://www.springframework.org/schema/util" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:p="http://www.springframework.org/schema/p" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:jee="http://www.springframework.org/schema/jee" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:mvc="http://www.springframework.org/schema/mvc"  xmlns:jaxws="http://cxf.apache.org/jaxws"
	xsi:schemaLocation="
			http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.1.xsd
			http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
			http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-3.1.xsd
			http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.1.xsd
			http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-3.1.xsd
			http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.1.xsd
			http://www.springframework.org/schema/cache    http://www.springframework.org/schema/cache/spring-cache.xsd
			http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd
			http://cxf.apache.org/jaxws  http://cxf.apache.org/schemas/jaxws.xsd">
    <!-- 自定义实现的JobFactory，通过Spring容器中获取Job实例，而不是Class.newInstance() -->
    <bean id="springBeanJobFactory" class="com.arlen.ebu.factory.CustomSpringBeanJobFactory" />
    
    <!-- 守护者job-->
    <bean id="daemonJob" class="com.arlen.ebu.job.DaemonJob">
    	<property name="scheduler" ref="schedulerFactory"></property>
    </bean>
    <!--   定义调用对象和调用对象的方法-->
    <bean id="jobDetail" class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
       <!--  调用的类-->
        <property name="targetObject">
            <ref bean="daemonJob"/>
        </property>
       <!--  调用类中的方法-->
        <property name="targetMethod">
            <value>execute</value>
        </property>
        <!--是否并发执行，即时间到了，如果前面一个定时调用还没执行完，是否能继续执行-->
        <property name="concurrent" value="false"/>
    </bean>
  <!--   定义触发时间-->
    <bean id="daemonJobTrigger" class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">
        <property name="jobDetail">
            <ref bean="jobDetail"/>
        </property>
        <property name="cronExpression">
            <!--    每隔30秒执行一次-->
            <value>0/30 * * * * ?</value>
        </property>
    </bean>
    
   <!--  总管理类 如果将lazy-init='false'那么容器启动就会执行调度程序-->
    <bean id="schedulerFactory"  class="org.springframework.scheduling.quartz.SchedulerFactoryBean">
        <property name="startupDelay" value="5" /><!-- 单位:秒 -->
        <property name="configLocation" value="classpath:config/quartz/quartz.properties" />
        <property name="triggers">
            <list>
                <ref bean="daemonJobTrigger"/>
            </list>
        </property>
        <property name="jobFactory" ref="springBeanJobFactory"/>
    </bean>   
    <import resource="quartz-biz.xml" />
</beans>
